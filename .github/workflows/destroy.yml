name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'dev'
      confirmation:
        description: 'Type "destroy" to confirm deletion of all resources'
        required: true

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0

permissions:
  id-token: write
  contents: read

jobs:
  validate-confirmation:
    runs-on: ubuntu-latest
    steps:
      - name: Check confirmation
        if: github.event.inputs.confirmation != 'destroy'
        run: |
          echo "Confirmation word 'destroy' not provided. Aborting destruction."
          exit 1

  destroy-ecs:
    needs: validate-confirmation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Destroy ECS Infrastructure
        working-directory: terraform/compute/ecs
        env:
          TF_VAR_database_password: ${{ secrets.DB_PASSWORD }}
        run: |
          terraform init
          terraform destroy -auto-approve

  destroy-ecr:
    needs: destroy-ecs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Destroy ECR Infrastructure
        working-directory: terraform/compute/ecr
        run: |
          terraform init
          terraform destroy -auto-approve

  destroy-database:
    needs: destroy-ecr
    runs-on: ubuntu-latest
    env:
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Destroy Database Infrastructure
        working-directory: terraform/database
        run: |
          terraform init
          terraform destroy -auto-approve

  destroy-network:
    needs: destroy-database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Destroy Network Infrastructure
        working-directory: terraform/network
        run: |
          terraform init
          terraform destroy -auto-approve 